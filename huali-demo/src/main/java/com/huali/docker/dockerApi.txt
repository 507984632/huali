添加容器
docker pull 软件名称:版本号(默认不写 就是找 latest 最新的版本号)

查看所有容器
docker images

启动容器
docker run -d -p 宿主机开放软件的端口号:软件的端口号 -it 软件名称
-d：以守护进程启动
-p：修改容器的映射端口
	宿主机开发软件端口：配置这个则通过宿主机的ip + 开放的端口即可访问容器镜像
	软件的端口：即容器镜像默认访问的端口，例如 mysql是3306 等
-it：跟这个xshell 进行交互
-v 宿主机路径:容器内路径：该参数 效果是将容器内的路径持久化到宿主机上，(盲猜 启动的时候会读取，关闭容器的时候会持久化进去)
-e 容器内的变量= ??：该命令是在容器启动的将所需要的变量以参数的形式传入

查看docker 容器的日志
docker logs 容器名称

查看运行中的容器镜像
docker ps 

进入运行中的镜像
docker exec -it 镜像id /bin/bash
exec：进入容器内部的命令
镜像id：docker ps 查看的 第一个值
/bin/bash：这个是容器内部的挂载点 这个可以当作是默认的都是这个挂在的(处自己上传的容器除外)

拷贝镜像中的文件
docker cp 镜像的名称:/文件的路径 ./
镜像名称：docker exec 进入镜像后 root@XXX XXX 就是镜像名称
文件路径：即想要拷贝的文件路径 
./：就是拷贝的宿主机的当前目录下
注意：如果将后两个参数调换位置，则是将宿主机中的文件拷贝的容器镜像中

查看镜像基本信息
docker inspect docker.io/mysql:5.7
inspect：查看基本信息的命令
docker.io/mysql5.7 这个是docker官网的msyql + 版本的基本信息(换成本地的就直接写软件名即可)

docker 网络 用于 docker 中多个容器之间的网络通讯
docker network <选项>
1. 创建
 docker network create 网络名称
2. 查看网络列表
  docker network ls
3. 删除
  docker network rm 网络名称/ 网络id
4. 查看网络详情
  docker network inspect 网络名称
如何在启动容器的时候使用
    例如：docker run -d -p3306:3306 --network 网络名称 mysql
    就将mysql 添加到这个 网络中了
